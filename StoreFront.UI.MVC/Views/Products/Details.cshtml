@model StoreFront.DATA.EF.Models.Product

@{
    ViewData["Title"] = "Product Details";
}


<div class="container mt-5">
<h1>@ViewData["Title"]</h1>
   
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductPrice)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductPrice)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductDescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductDescription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductQuantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductQuantity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductOnOrder)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductOnOrder)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductImage)
        </dt>
        <dd class = "col-sm-10">
            @*@Html.DisplayFor(model => model.ProductImage)*@
            <img src="~/images/@Model.ProductImage" class="img-fluid" alt="@Model.ProductDescription" />
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ProductId">Edit</a> |
    <a asp-action="Index">Back to Products</a>
</div>
